-- Enable RLS (Row Level Security)
alter table if exists "stories" enable row level security;

-- Create the stories table if it doesn't exist
create table if not exists "stories" (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users not null,
  family_member text not null,
  author text not null,
  title text not null,
  content text not null,
  avatar_url text not null,
  background_color text not null,
  created_at timestamptz default now() not null
);

-- Create an index on the user_id for more efficient queries
create index if not exists idx_stories_user_id on stories(user_id);

-- Add RLS policies
-- Allow users to select only their own stories
create policy "Users can view their own stories"
  on stories for select
  using (auth.uid() = user_id);

-- Allow users to insert their own stories
create policy "Users can insert their own stories"
  on stories for insert
  with check (auth.uid() = user_id);

-- Allow users to update their own stories
create policy "Users can update their own stories"
  on stories for update
  using (auth.uid() = user_id);

-- Allow users to delete their own stories
create policy "Users can delete their own stories"
  on stories for delete
  using (auth.uid() = user_id); 