import{C as c,k as n,I as d}from"./DGCzKnOV.js";import{u as a}from"./Bo3OYLVH.js";const l=c("stories",{state:()=>({stories:[],isLoading:!0}),actions:{async loadStories(){var e;const r=a(),o=n();this.isLoading=!0;try{if(!((e=o.value)!=null&&e.id)){console.warn("Cannot load stories: User not authenticated"),this.stories=[];return}const{data:s,error:t}=await r.from("stories").select("*").eq("user_id",o.value.id).order("created_at",{ascending:!1});if(t)throw console.error("Error fetching stories:",t),t;this.stories=s||[]}catch(s){console.error("Error loading stories:",s),this.stories=[]}finally{this.isLoading=!1}},async addStory(r){var s;const o=a(),e=n();if(!((s=e.value)!=null&&s.id))throw console.error("Error adding story: User not authenticated"),new Error("User not authenticated");try{const{data:t,error:i}=await o.from("stories").insert([{user_id:e.value.id,family_member:r.family_member,author:r.author,title:r.title,content:r.content,avatar_url:r.avatar_url,background_color:r.background_color}]).select().single();if(i)throw console.error("Supabase error details:",i),i;return this.stories.unshift(t),t}catch(t){throw console.error("Error adding story:",t),t}},async deleteStory(r){const o=a();try{const{error:e}=await o.from("stories").delete().eq("id",r);if(e)throw e;this.stories=this.stories.filter(s=>s.id!==r)}catch(e){throw console.error("Error deleting story:",e),e}}}}),f=()=>{const r=l(),{stories:o,isLoading:e}=d(r);return r.loadStories(),{stories:o,isLoading:e,addStory:r.addStory,deleteStory:r.deleteStory}};export{f as u};
